services:
    bot:
        container_name: bot
        build:
            context: ./bot
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
            - "9229:9229"
        environment:
            NODE_ENV: development
        command: >
            sh -c "
            cd /var/app/ &&
            npm install -g bunyan knex &&
            npm install winston &&
            npm install &&
            npx knex migrate:latest &&
            npx knex seed:run &&
            npm run watch | bunyan"
        volumes:
            - ./bot:/var/app/:rw
            - /var/app/node_modules
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        container_name: postgres
        environment:
            POSTGRES_PASSWORD: "${PG_PASSWD:-db_pass}"
            POSTGRES_USER: "${PG_USER:-db_user}"
            POSTGRES_DB: "${PG_DATABASE:-db_common}"
        image: mdillon/postgis:11
        healthcheck:
            test: "psql -c 'SELECT 1' db_common db_user"
            interval: 5s
            timeout: 10s
            retries: 3
        ports:
            - "5434:5432"

    vpn:
        image: hwdsl2/ipsec-vpn-server
        container_name: vpn
        environment:
            VPN_IPSEC_PSK: your_psk                     # общий секрет для IPsec
            VPN_USER: username                           # имя пользователя VPN
            VPN_PASSWORD: userpassword                   # пароль для пользователя VPN
        ports:
            - "500:500/udp"    # UDP для IKEv2
            - "4500:4500/udp"  # UDP для NAT-T
        # cap_add:
        # - NET_ADMIN        # Необходимо для управления сетевыми настройками
        # - SYS_MODULE       # Необходимо для работы с модулями ядра
        # restart: always
        # networks:
        # - vpn-net