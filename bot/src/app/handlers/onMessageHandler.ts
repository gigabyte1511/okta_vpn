import TelegramBot from "node-telegram-bot-api";
import { bot, botConfig } from "..";
import { renderBuyVPN } from "../renders/buyVPN";
import { renderSubscriptionsList } from "../renders/subscriptionList";
import { Callback } from "../types";
import { getVpnConfig } from "./controllers/vpnConfigController";
import { renderUserConfigsList } from "../renders/userConfigsList";

export enum NavMessage {
    SUPPORT = "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
    USERCONFIGS = "üõ†Ô∏è –ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
    BUYCONFIG = "üõí –ö—É–ø–∏—Ç—å",
    INSTRUCTION = "üåê –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
}

export function hadleOnMesssage(msg: TelegramBot.Message) {
    handleNavMessage(msg)
    // There will be more messge types
}

//–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–¥–∞–µ–º –≤ —Ä–µ–Ω–¥–µ—Ä –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä
function handleNavMessage(msg: TelegramBot.Message) {
    const text = msg.text || "";
    if (text === NavMessage.SUPPORT) {
        handleNavSupportMsg(msg);
    } else if (text === NavMessage.USERCONFIGS) {
        handleNavMyConfigsMsg(msg);
    } else if (text === NavMessage.BUYCONFIG) {
        handlBuyConfigMsg(msg);
    } else if (text === NavMessage.INSTRUCTION){
        handleInstructionMsg(msg)
    }
}

function handleInstructionMsg(msg: TelegramBot.Message) {
    const chatId = msg.chat.id;

    if (msg.from) {
        const instructionText = "üåê <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ VPN</b>\n\n" +
    "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–ø–æ—Å–æ–± –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n\n" +
    "1. <b><i>–§–∞–π–ª .p12 (–¥–ª—è Windows –∏ macOS):</i></b>\n" +
    "   - –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ `.p12`.\n" +
    "   –ù–∞ Windows:\n" +
    "   - –û—Ç–∫—Ä–æ–π—Ç–µ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ‚Üí –°–µ—Ç—å –∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç ‚Üí –¶–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç—è–º–∏.\n" +
    "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –Ω–æ–≤–æ–µ VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.\n" +
    "   –ù–∞ macOS:\n" +
    "   - –û—Ç–∫—Ä–æ–π—Ç–µ Keychain Access (–°–≤—è–∑–∫–∞ –∫–ª—é—á–µ–π) –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª `.p12`.\n" +
    "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ VPN –≤ –°–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ‚Üí –°–µ—Ç—å.\n\n" +
    "2. <b><i>–§–∞–π–ª .mobileconfig (–¥–ª—è iOS –∏ macOS):</i></b>\n" +
    "   - –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª `.mobileconfig` –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n" +
    "   - –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å.\n" +
    "   - –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è.\n" +
    "   - –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—è–≤–∏—Ç—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VPN.\n\n" +
    "3. <b><i>–§–∞–π–ª strongSwan (–¥–ª—è Android):</i></b>\n" +
    "   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ [strongSwan VPN Client](https://play.google.com/store/apps/details?id=org.strongswan.android).\n" +
    "   - –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.\n" +
    "   - –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ strongSwan:\n" +
    "   - –ù–∞–∂–º–∏—Ç–µ ‚Äú–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å VPN-–ø—Ä–æ—Ñ–∏–ª—å‚Äù.\n" +
    "   - –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.\n" +
    "   - –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è.\n" +
    "   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É VPN.\n\n";
        bot.sendMessage(chatId, instructionText,{ parse_mode: 'HTML' });
    }
}

// –≤—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–∫–∏
function handlBuyConfigMsg(msg: TelegramBot.Message) {
    const chatId = msg.chat.id;

    if (msg.from) {
        const keyboard = {
            reply_markup: renderSubscriptionsList(),
        };
        bot.sendMessage(chatId, "üíé –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:", keyboard);
    }
}

//–æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
function handleNavSupportMsg(msg: TelegramBot.Message) {
    const chatId = msg.chat.id;
    const keyboard = {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url: botConfig.supportURL }
                ],
                [
                    { text: "üìã –£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞", callback_data: Callback.GET_PAYMENT_STATUS}
                ]
            ],
        },
    };

    bot.sendMessage(chatId, "–ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å:", keyboard);
}

//—Ä–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async function handleNavMyConfigsMsg(msg: TelegramBot.Message) {
    const chatId = msg.chat.id;

    if (msg.from) {
        const vpnConfigs = await getVpnConfig(chatId);
        if (vpnConfigs.success === false) {
            bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö VPN", renderBuyVPN());
            return;
        }
        else {
            bot.sendMessage(
                chatId,
                "–í–∞—à –ª–∏—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:",
                renderUserConfigsList([vpnConfigs.data.files])
            );
        }
    }
}
